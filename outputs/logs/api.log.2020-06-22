2020-06-22 22:14:16,785 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:14:19,300 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:14:19,583 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:14:19,699 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:14:19,850 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:14:20,018 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:14:20,127 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:14:20,523 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:14:20,794 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:14:21,072 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:14:21,339 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:14:21,457 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:14:21,591 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:14:21,721 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:14:21,721 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:14:21,845 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:14:21,965 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:14:21,966 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:14:22,091 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:14:22,207 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:14:22,208 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:14:22,331 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:14:22,331 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:14:22,445 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:14:22,445 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:14:22,564 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:14:22,948 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:14:23,335 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:14:23,456 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:14:23,581 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:14:23,714 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:14:23,832 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:14:23,986 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:14:24,103 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:14:24,227 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:14:24,352 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:14:24,474 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:14:24,589 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:14:24,976 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:14:25,223 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
2020-06-22 22:16:04,810 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:16:06,175 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:16:06,477 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:16:06,642 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:16:06,853 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:16:07,071 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:16:07,244 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:16:07,672 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:16:07,978 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:16:08,290 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:16:08,602 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:16:08,773 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:16:08,940 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:16:09,119 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:16:09,119 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:16:09,286 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:16:09,463 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:16:09,464 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:16:09,635 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:16:09,805 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:16:09,805 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:16:09,975 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:16:09,975 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:16:10,148 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:16:10,148 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:16:10,316 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:16:10,750 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:16:11,197 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:16:11,370 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:16:11,544 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:16:11,725 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:16:11,898 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:16:12,102 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:16:12,270 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:16:12,435 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:16:12,605 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:16:12,768 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:16:12,934 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:16:13,364 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:16:13,582 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
2020-06-22 22:18:29,073 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:18:30,511 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:18:30,686 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:18:30,860 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:18:31,067 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:18:31,286 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:18:31,455 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:18:31,904 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:18:32,227 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:18:32,550 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:18:32,866 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:18:33,037 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:18:33,223 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:18:33,405 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:18:33,405 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:18:33,587 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:18:33,763 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:18:33,763 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:18:33,949 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:18:34,123 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:18:34,123 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:18:34,295 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:18:34,295 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:18:34,465 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:18:34,465 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:18:34,631 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:18:35,054 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:18:35,476 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:18:35,642 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:18:35,816 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:18:35,993 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:18:36,156 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:18:36,364 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:18:36,540 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:18:36,721 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:18:36,896 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:18:37,074 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:18:37,247 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:18:37,666 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:18:38,139 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-整数--执行通过
2020-06-22 22:18:38,477 -- [test_withdraw.py-->line:87] - ERROR: 用例提现成功-1位小数执行未通过
2020-06-22 22:18:38,477 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-06-22 22:18:38,477 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6604003.46, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:38,477 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600.1000000000000227373675443232059478759765625') != Decimal('600.10')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.1000000000000227373675443232059478759765625') != Decimal('600.10')
2020-06-22 22:18:38,712 -- [test_withdraw.py-->line:87] - ERROR: 用例提现成功-2位小数执行未通过
2020-06-22 22:18:38,712 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-06-22 22:18:38,712 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6603403.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:38,713 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600.220000000000027284841053187847137451171875') != Decimal('600.22')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.220000000000027284841053187847137451171875') != Decimal('600.22')
2020-06-22 22:18:38,952 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-50万--执行通过
2020-06-22 22:18:39,276 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-06-22 22:18:39,276 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '会员id为空'}
2020-06-22 22:18:39,276 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:39,277 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:18:39,503 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id不存在执行未通过
2020-06-22 22:18:39,503 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-06-22 22:18:39,503 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:39,503 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:18:39,736 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-06-22 22:18:39,737 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-06-22 22:18:39,737 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:39,737 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:18:39,958 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-06-22 22:18:39,959 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数值参数格式不正确'}
2020-06-22 22:18:39,959 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:39,959 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:18:40,206 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为0执行未通过
2020-06-22 22:18:40,207 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:18:40,207 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:40,207 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:18:40,435 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为负数执行未通过
2020-06-22 22:18:40,435 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:18:40,435 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:40,435 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:18:40,893 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-3位小数执行未通过
2020-06-22 22:18:40,893 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额小数超过两位'}
2020-06-22 22:18:40,893 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:40,893 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600.221999999999979991116560995578765869140625') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.221999999999979991116560995578765869140625') != Decimal('0.00')
2020-06-22 22:18:41,140 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-大于50万执行未通过
2020-06-22 22:18:41,140 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:18:41,140 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:18:41,140 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:18:41,395 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
2020-06-22 22:19:10,983 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:19:12,360 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:19:12,523 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:19:12,693 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:19:12,899 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:19:13,114 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:19:13,295 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:19:13,760 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:19:14,072 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:19:14,402 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:19:14,724 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:19:14,890 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:19:15,059 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:19:15,243 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:19:15,244 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:19:15,416 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:19:15,595 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:19:15,596 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:19:15,767 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:19:15,940 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:19:15,940 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:19:16,109 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:19:16,109 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:19:16,288 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:19:16,288 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:19:16,459 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:19:16,893 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:19:17,334 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:19:17,501 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:19:17,667 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:19:17,841 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:19:18,004 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:19:18,214 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:19:18,386 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:19:18,552 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:19:18,722 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:19:18,893 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:19:19,068 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:19:19,525 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:19:20,197 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-整数--执行通过
2020-06-22 22:19:20,498 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-1位小数--执行通过
2020-06-22 22:19:20,809 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-2位小数--执行通过
2020-06-22 22:19:21,115 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-50万--执行通过
2020-06-22 22:19:21,413 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-06-22 22:19:21,413 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '会员id为空'}
2020-06-22 22:19:21,413 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:21,413 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:19:21,620 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id不存在执行未通过
2020-06-22 22:19:21,620 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-06-22 22:19:21,621 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:21,621 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:19:21,839 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-06-22 22:19:21,839 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-06-22 22:19:21,839 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:21,839 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:19:22,059 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-06-22 22:19:22,059 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数值参数格式不正确'}
2020-06-22 22:19:22,059 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:22,060 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:19:22,282 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为0执行未通过
2020-06-22 22:19:22,283 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:19:22,283 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:22,283 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:19:22,490 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为负数执行未通过
2020-06-22 22:19:22,490 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:19:22,490 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:22,490 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:19:22,911 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-3位小数执行未通过
2020-06-22 22:19:22,911 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额小数超过两位'}
2020-06-22 22:19:22,911 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:22,911 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-06-22 22:19:23,118 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-大于50万执行未通过
2020-06-22 22:19:23,119 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:19:23,119 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:19:23,119 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:19:23,344 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
2020-06-22 22:20:24,849 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:20:26,406 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:20:26,607 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:20:26,801 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:20:27,065 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:20:27,339 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:20:27,536 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:20:28,003 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:20:28,345 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:20:28,680 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:20:29,003 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:20:29,181 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:20:29,351 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:20:29,532 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:20:29,533 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:20:29,708 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:20:29,883 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:20:29,883 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:20:30,075 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:20:30,275 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:20:30,275 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:20:30,468 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:20:30,469 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:20:30,663 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:20:30,663 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:20:30,841 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:20:31,353 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:20:31,789 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:20:31,955 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:20:32,124 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:20:32,287 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:20:32,449 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:20:32,693 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:20:32,864 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:20:33,036 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:20:33,212 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:20:33,376 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:20:33,540 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:20:33,962 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:20:34,413 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-整数--执行通过
2020-06-22 22:20:34,748 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-1位小数--执行通过
2020-06-22 22:20:35,075 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-2位小数--执行通过
2020-06-22 22:20:35,398 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-50万--执行通过
2020-06-22 22:20:35,709 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为空执行未通过
2020-06-22 22:20:35,709 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '会员id为空'}
2020-06-22 22:20:35,710 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:35,710 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:20:36,057 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id不存在执行未通过
2020-06-22 22:20:36,057 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-06-22 22:20:36,057 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:36,057 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:20:36,374 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-06-22 22:20:36,374 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-06-22 22:20:36,374 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:36,374 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:20:36,680 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为小数执行未通过
2020-06-22 22:20:36,680 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数值参数格式不正确'}
2020-06-22 22:20:36,680 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:36,680 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-06-22 22:20:36,996 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为0执行未通过
2020-06-22 22:20:36,996 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:20:36,996 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:36,996 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:20:37,302 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为负数执行未通过
2020-06-22 22:20:37,303 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:20:37,303 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:37,303 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:20:37,833 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-3位小数执行未通过
2020-06-22 22:20:37,833 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额小数超过两位'}
2020-06-22 22:20:37,833 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:37,833 -- [test_withdraw.py-->line:90] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-06-22 22:20:38,153 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-大于50万执行未通过
2020-06-22 22:20:38,153 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:20:38,153 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:20:38,153 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:20:38,473 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
2020-06-22 22:21:54,441 -- [run_test.py-->line:11] - INFO: --------------------开始执行案例-------------------
2020-06-22 22:21:55,831 -- [test_login.py-->line:62] - INFO: 用例---登录成功----执行通过
2020-06-22 22:21:56,012 -- [test_login.py-->line:62] - INFO: 用例---手机号为空----执行通过
2020-06-22 22:21:56,180 -- [test_login.py-->line:62] - INFO: 用例---密码为空----执行通过
2020-06-22 22:21:56,388 -- [test_login.py-->line:62] - INFO: 用例---手机号未注册----执行通过
2020-06-22 22:21:56,627 -- [test_login.py-->line:62] - INFO: 用例---密码错误----执行通过
2020-06-22 22:21:56,794 -- [test_login.py-->line:62] - INFO: 用例---手机号格式错误----执行通过
2020-06-22 22:21:57,231 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-整数执行完成---------
2020-06-22 22:21:57,550 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-1位小数执行完成---------
2020-06-22 22:21:57,879 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-2位小数执行完成---------
2020-06-22 22:21:58,192 -- [test_recharge.py-->line:99] - INFO: ---用例充值成功-50万执行完成---------
2020-06-22 22:21:58,362 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为空执行完成---------
2020-06-22 22:21:58,532 -- [test_recharge.py-->line:99] - INFO: ---用例id不是当前登录的用户执行完成---------
2020-06-22 22:21:58,710 -- [test_recharge.py-->line:93] - DEBUG: ----用例会员id为字符串执行完成-------
2020-06-22 22:21:58,710 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:21:58,890 -- [test_recharge.py-->line:99] - INFO: ---用例会员id为小数执行完成---------
2020-06-22 22:21:59,074 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为0执行完成-------
2020-06-22 22:21:59,075 -- [test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:21:59,253 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额为负数执行完成---------
2020-06-22 22:21:59,440 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额为空执行完成-------
2020-06-22 22:21:59,440 -- [test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], jsonpath(res, "$..code")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-06-22 22:21:59,615 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-3位小数执行完成-------
2020-06-22 22:21:59,615 -- [test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-06-22 22:21:59,796 -- [test_recharge.py-->line:93] - DEBUG: ----用例充值金额-大于50万执行完成-------
2020-06-22 22:21:59,796 -- [test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], jsonpath(res, "$..msg")[0])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-06-22 22:21:59,981 -- [test_recharge.py-->line:99] - INFO: ---用例充值金额-非数字执行完成---------
2020-06-22 22:22:00,457 -- [test_register.py-->line:72] - INFO: 用例---注册成功-带注册名----执行通过
2020-06-22 22:22:00,879 -- [test_register.py-->line:72] - INFO: 用例---成功-不带用户名----执行通过
2020-06-22 22:22:01,039 -- [test_register.py-->line:72] - INFO: 用例---不输入手机号----执行通过
2020-06-22 22:22:01,204 -- [test_register.py-->line:72] - INFO: 用例---手机号长度10位----执行通过
2020-06-22 22:22:01,370 -- [test_register.py-->line:72] - INFO: 用例---手机号长度12位----执行通过
2020-06-22 22:22:01,540 -- [test_register.py-->line:72] - INFO: 用例---手机号含有非法字符----执行通过
2020-06-22 22:22:01,759 -- [test_register.py-->line:72] - INFO: 用例---已注册过的手机号----执行通过
2020-06-22 22:22:01,936 -- [test_register.py-->line:72] - INFO: 用例---密码7位----执行通过
2020-06-22 22:22:02,095 -- [test_register.py-->line:72] - INFO: 用例---密码17位----执行通过
2020-06-22 22:22:02,258 -- [test_register.py-->line:72] - INFO: 用例---不输入密码----执行通过
2020-06-22 22:22:02,427 -- [test_register.py-->line:72] - INFO: 用例---注册名11位----执行通过
2020-06-22 22:22:02,593 -- [test_register.py-->line:72] - INFO: 用例---类型输入非0，1内容----执行通过
2020-06-22 22:22:03,017 -- [test_register.py-->line:72] - INFO: 用例---不输入类型----执行通过
2020-06-22 22:22:03,472 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-整数--执行通过
2020-06-22 22:22:03,814 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-1位小数--执行通过
2020-06-22 22:22:04,135 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-2位小数--执行通过
2020-06-22 22:22:04,453 -- [test_withdraw.py-->line:94] - INFO: 用例--提现成功-50万--执行通过
2020-06-22 22:22:04,619 -- [test_withdraw.py-->line:94] - INFO: 用例--会员id为空--执行通过
2020-06-22 22:22:04,799 -- [test_withdraw.py-->line:94] - INFO: 用例--会员id不存在--执行通过
2020-06-22 22:22:04,981 -- [test_withdraw.py-->line:87] - ERROR: 用例会员id为字符串执行未通过
2020-06-22 22:22:04,981 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-06-22 22:22:04,981 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:22:04,981 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:22:05,149 -- [test_withdraw.py-->line:94] - INFO: 用例--会员id为小数--执行通过
2020-06-22 22:22:05,327 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为0执行未通过
2020-06-22 22:22:05,327 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:22:05,327 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 9962, 'leave_amount': 6102803.24, 'mobile_phone': '13367899876', 'reg_name': '小柠檬666', 'reg_time': '2020-06-06 15:00:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:22:05,327 -- [test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(expected["code"],res["code"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-06-22 22:22:05,497 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额为负数执行未通过
2020-06-22 22:22:05,497 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:22:05,497 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:22:05,497 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:22:05,668 -- [test_withdraw.py-->line:94] - INFO: 用例--提现金额为空--执行通过
2020-06-22 22:22:05,837 -- [test_withdraw.py-->line:94] - INFO: 用例--提现金额-3位小数--执行通过
2020-06-22 22:22:06,013 -- [test_withdraw.py-->line:87] - ERROR: 用例提现金额-大于50万执行未通过
2020-06-22 22:22:06,014 -- [test_withdraw.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-06-22 22:22:06,014 -- [test_withdraw.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-06-22 22:22:06,014 -- [test_withdraw.py-->line:90] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "D:\PychramCode\auto_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-06-22 22:22:06,177 -- [test_withdraw.py-->line:94] - INFO: 用例--提现金额-非数字--执行通过
2020-06-22 22:22:06,276 -- [run_test.py-->line:24] - INFO: ------------------测试案例执行结束--------------------
